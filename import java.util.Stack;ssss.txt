import java.util.Stack;

public class MinStack {
    private Stack<Integer> stack;
    private Stack<Integer> minStack;

    public MinStack() {
        stack = new Stack<>();
        minStack = new Stack<>();
    }

    public void push(int value) {
        stack.push(value);

        if (minStack.isEmpty() || value <= minStack.peek()) {
            minStack.push(value);
        }
    }

    public void pop() {
        if (!stack.isEmpty()) {
            int poppedValue = stack.pop();

            if (poppedValue == minStack.peek()) {
                minStack.pop();
            }
        }
    }

   

    public int min() {
        return minStack.peek();
    }

    public static void main(String[] args) {
        MinStack stack = new MinStack();

        stack.push(5);
        stack.push(2);
        stack.push(7);
        stack.push(1);

        System.out.println("Minimum element: " + stack.min()); // Output: 1

        stack.pop();
        stack.pop();

        System.out.println("Minimum element: " + stack.min()); // Output: 2
    }
}
